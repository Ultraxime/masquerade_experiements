version: "3.9"

services:
  proxy-server:
    image: registry.ultraxime.fr/proxy-server
    env_file: masquerade.env
    restart: on-failure
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - "node.labels.proxy-server==True"
    networks:
      - gateway
    
  proxy-client:
    image: registry.ultraxime.fr/proxy-client
    env_file: masquerade.env
    restart: on-failure
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - "node.labels.proxy-client==True"
    networks:
      - client
    depends_on:
      - proxy-server
      - gateway
      - dns
    cap_add:
      - NET_ADMIN
    
  squid-proxy:
    image: ubuntu/squid:latest
    restart: on-failure
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
    networks:
      - gateway
    
  dns:
    image: registry.ultraxime.fr/dns
    restart: on-failure
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
    networks:
      - gateway
      - client

  gateway:
    image: registry.ultraxime.fr/gateway
    env_file: network.env
    restart: on-failure
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - "node.labels.proxy-client==True"
    networks:
      - client
      - gateway
    depends_on:
      - squid-proxy
      - proxy-server
      - dns
    cap_add:
      - NET_ADMIN

  browsertime-custom:
    image: registry.ultraxime.fr/browsertime-custom
    env_file:
      - browsertime.env
      - proxys.env
    volumes:
      - type: bind
        source: results
        target: /browsertime
    restart: on-failure
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - "node.labels.client==True"
    networks:
      - client
    depends_on:
      proxy-client:
        condition: service_healthy
      gateway:
        condition: service_started
    cap_add:
      - NET_ADMIN

  speedtest:
    image: registry.ultraxime.fr/speedtest
    env_file:
      - basic_test.env
      - proxys.env
    volumes:
      - type: bind
        source: results
        target: /results
    restart: on-failure
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - "node.labels.client==True"
    networks:
      - client
    cap_add:
      - NET_ADMIN
    depends_on:
      browsertime-custom:
        condition: service_completed_successfully
      proxy-client:
        condition: service_healthy

  bulk_download:
    image: registry.ultraxime.fr/bulk_download
    env_file:
      - basic_test.env
      - proxys.env
    restart: on-failure
    volumes:
      - type: bind
        source: results
        target: /results
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - "node.labels.client==True"
    networks:
      - client
    cap_add:
      - NET_ADMIN
    depends_on:
      proxy-client:
        condition: service_healthy
      speedtest:
        condition: service_completed_successfully

networks:
  client:
    name: 2_client
    external: false
    attachable: true 
  gateway:
    name: 1_gateway
    external: false
    attachable: true

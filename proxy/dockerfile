ARG type

FROM rust:alpine AS base

RUN apk add --upgrade git cmake build-base

WORKDIR /usr/src/
# RUN rustup target add x86_64-unknown-linux-musl

# RUN git clone https://github.com/jromwu/masquerade.git /tmp/masquerade

# RUN cargo new --lib masquerade

# WORKDIR masquerade
# RUN cp /tmp/masquerade/Cargo.toml .
# RUN cargo update
# RUN ls && sleep 30
# RUN cargo build --release

# RUN cp -r /tmp/masquerade/src .
# RUN cargo install --target x86_64-unknown-linux-musl --path .

# RUN ls /usr/local/cargo/bin && sleep 30

RUN git clone https://github.com/jromwu/masquerade.git

WORKDIR masquerade

RUN cargo build --bins --release

FROM base AS client

RUN apk add curl

ENV port=8989
ENV ip=127.0.0.1
EXPOSE ${port}

ENV healtcheck=https://www.google.fr

HEALTHCHECK --timeout=3s --start-period=5s CMD curl -p -x ${ip}:${port} ${healtcheck}

ENV remote_ip=127.0.0.1
ENV remote_port=4433

ENV client_type=http

ENV log_level=warn

COPY --from=base /usr/src/masquerade/target/release/client /client

CMD RUST_BACKTRACE=1 RUST_LOG=${log_level} /client ${remote_ip}:${remote_port} ${ip}:${port} ${client_type}


FROM base AS server

ENV port=4433
ENV ip=127.0.0.1
EXPOSE ${port}/udp

ENV log_level=warn

COPY --from=base /usr/src/masquerade/target/release/server /server

CMD RUST_BACKTRACE=1 RUST_LOG=${log_level} /server ${ip}:${port}


FROM ${type}

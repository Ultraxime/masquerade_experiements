version: "3.9"

x-environement: &default-environement
  PROXY_MASQUERADE: proxy-client:8989
  PROXY_SQUID: squid-proxy:3128
  ITERATIONS: 1
  MESURE: false

services:
  proxy-server:
    image: registry.ultraxime.fr/proxy-server
    build:
      context: proxy
      dockerfile: dockerfile
      args:
        type: server
    environment:
      ip: proxy-server
    restart: always
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - "node.labels.proxy-server==True"
    networks:
      - proxy
    profiles:
     - run

  proxy-client:
    image: registry.ultraxime.fr/proxy-client
    build:
      context: proxy
      dockerfile: dockerfile
      args:
        type: client
    environment:
      ip: proxy-client
      remote_ip: proxy-server
      client_type: http
    restart: always
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - "node.labels.proxy-client==True"
    networks:
      - proxy
      - gateway
    depends_on:
      - proxy-server
    profiles:
      - run

  squid-proxy:
    image: ubuntu/squid:latest
    restart: always
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
    networks:
      - gateway
    profiles:
      - run

  dns:
    image: registry.ultraxime.fr/dns
    build: dns
    restart: always
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
    networks:
      - gateway
      - client
    profiles:
      - build
      - run

  gateway:
    image: registry.ultraxime.fr/gateway
    build: gateway
    restart: always
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - "node.labels.proxy-client==True"
    networks:
      gateway:
        priority: 1
      client:
        priority: 0
    depends_on:
      - squid-proxy
      - proxy-client
      - dns
    cap_add:
      - NET_ADMIN
    profiles:
      - run


  browsertime-custom:
    image: registry.ultraxime.fr/browsertime-custom
    build: browsertime-custom
    environment:
      <<: *default-environement
    volumes:
      - type: bind
        source: results
        target: /browsertime/browsertime-results
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - "node.labels.client==True"
    networks:
      - client
    depends_on:
      - gateway
    cap_add:
      - NET_ADMIN
    profiles:
      - run

  speedtest:
    image: registry.ultraxime.fr/speedtest
    build: speedtest
    environment:
      <<: *default-environement
    volumes:
      - type: bind
        source: results
        target: /results
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - "node.labels.client==True"
    networks:
      - client
    cap_add:
      - NET_ADMIN
    depends_on:
      browsertime-custom:
        condition: service_completed_successfully
    profiles:
      - run

  bulk_download:
    image: registry.ultraxime.fr/bulk_download
    build: bulk_download
    environment:
      <<: *default-environement 
    volumes:
      - type: bind
        source: results
        target: /results
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - "node.labels.client==True"
    networks:
      - client
    cap_add:
      - NET_ADMIN
    depends_on:
      speedtest:
        condition: service_completed_successfully
    profiles:
      - run

  results-compilation:
    image: registry.ultraxime.fr/results-compilation
    build: results-compilation
    volumes:
      - type: bind
        source: results
        target: /results
    depends_on:
      browsertime-custom:
        condition: service_completed_successfully
        restart: true
      speedtest:
        condition: service_completed_successfully
        restart: true
      bulk_download:
        condition: service_completed_successfully
        restart: true
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - "node.labels.client==True"
    networks: []
    profiles:
      - run

networks:
  proxy:
    name: proxy
    external: false
    attachable: true
  client:
    name: client
    external: false
    attachable: true 
  gateway:
    name: gateway
    external: false
    attachable: true